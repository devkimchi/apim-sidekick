@page "/geolocation"
@using IgniteSpotlight.WebApp.Configs

@inject IGeolocationService Geolocation
@inject EndpointsSettings Endpoints

@if (position == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card">
        <img src="@imageUrl" class="card-img-top" style="width:500px !important; height:500px !important;" alt="현재 위치 - 네이버 맵">
        <ul class="list-group">
            <li class="list-group-item">Latitude: @position.Coords.Latitude</li>
            <li class="list-group-item">Longitude: @position.Coords.Longitude</li>
        </ul>
    </div>


}


@code {
    protected GeolocationPosition? position;
    protected GeolocationPositionError? error;
    protected string? imageUrl;

    private PositionOptions _options = new PositionOptions()
    {
        EnableHighAccuracy = true,
        MaximumAge = null,
        Timeout = 15_000
    };

    protected override void OnInitialized()
    {
        Geolocation.GetCurrentPosition(
            component: this,
            onSuccessCallbackMethodName: nameof(OnPositionReceived),
            onErrorCallbackMethodName: nameof(OnPositionError),
            options: _options
        );
    }

    [JSInvokable]
    public void OnPositionReceived(GeolocationPosition position)
    {
        this.position = position;
        this.imageUrl = string.Format(Endpoints.Maps, position.Coords.Latitude, position.Coords.Longitude, 12);

        StateHasChanged();
    }

    [JSInvokable]
    public void OnPositionError(GeolocationPositionError positionError)
    {
        this.error = positionError;

        StateHasChanged();
    }
}
